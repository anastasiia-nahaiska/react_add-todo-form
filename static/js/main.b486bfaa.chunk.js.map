{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","title","completed","id","cn","TodoList","todos","map","username","todoWithUser","userId","usersFromServer","find","App","useState","isSubmit","setIsSubmit","setTodos","selectedUserId","setSelectedUserId","setTitle","isValidTitle","text","test","action","method","htmlFor","type","value","placeholder","onChange","event","currentTarget","style","marginTop","disabled","onClick","preventDefault","maxId","Math","max","trim","length","newTodo","currentTodos","addTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b486bfaa.chunk.js","sourcesContent":["import { User } from '../../react-app-env';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { TodoWithUser } from '../../react-app-env';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: TodoWithUser;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    id,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { TodoWithUser } from '../../react-app-env';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodoWithUser[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoWithUser, User } from './react-app-env';\n\nconst getUser = (userId: number): User | null => {\n  return usersFromServer.find(user => user.id === userId) || null;\n};\n\nconst todoWithUser: TodoWithUser[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [isSubmit, setIsSubmit] = useState(false);\n  const [todos, setTodos] = useState<TodoWithUser[]>(todoWithUser);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [title, setTitle] = useState('');\n\n  const addTodo = () => {\n    const maxId = Math.max(...todos.map(todo => todo.id));\n\n    if (title.trim().length) {\n      const newTodo = {\n        id: maxId + 1,\n        title: title.trim(),\n        completed: false,\n        userId: selectedUserId,\n        user: usersFromServer.find(user => user.id === selectedUserId) || null,\n      };\n\n      setTodos(currentTodos => [...currentTodos, newTodo]);\n    }\n  };\n\n  const clearTitle = () => {\n    setTitle('');\n  };\n\n  const clearSelectedUserId = () => {\n    setSelectedUserId(0);\n  };\n\n  const isValidTitle = (text: string) => {\n    const pattern = /^[A-Za-z0 9\\s]*$|[бвгґджзклмнпрстфхцчшщйаеєиіїоуюяь]/i;\n\n    return pattern.test(text);\n  };\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.currentTarget.value);\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.currentTarget.value);\n  };\n\n  const onSubmit = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    setIsSubmit(true);\n\n    if (title && selectedUserId && isValidTitle(title)) {\n      addTodo();\n      clearTitle();\n      clearSelectedUserId();\n      setIsSubmit(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\">\n        <div className=\"field\">\n          <label htmlFor=\"createTitle\">\n            Tilte:&nbsp;\n          </label>\n\n          <input\n            id=\"createTitle\"\n            type=\"text\"\n            value={title}\n            placeholder=\"Enter a title\"\n            data-cy=\"titleInput\"\n            onChange={handleInputChange}\n          />\n\n          {isSubmit && !title && (\n            <span className=\"error\">&nbsp;Please enter a title &#128521;</span>\n          )}\n\n          {isSubmit && !isValidTitle(title) && (\n            <span className=\"error\">\n              &nbsp;The title can contain only letters,\n              numbers and no more than 1 space in a row &#128546;\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"selectUser\">\n            User:&nbsp;\n          </label>\n\n          <select\n            style={\n              { marginTop: '10px' }\n            }\n            id=\"selectUser\"\n            data-cy=\"userSelect\"\n            value={selectedUserId}\n            onChange={handleSelectChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {isSubmit && !selectedUserId && (\n            <span className=\"error\">&nbsp;Please choose a user &#128521;</span>\n          )}\n        </div>\n\n        <button\n          style={\n            { marginTop: '10px' }\n          }\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={onSubmit}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}